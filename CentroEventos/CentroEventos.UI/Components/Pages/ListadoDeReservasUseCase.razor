@using CentroEventos.UI.Components
@using CentroEventos.Aplicacion.Excepciones
@page "/ListadoReservas"
@rendermode InteractiveServer
@inject ListadoReservaUseCase ListadoReservaUseCase
@inject BajaReservaUseCase BajaReservaUseCase
@inject NavigationManager Navegador

<DialogoConfirmacion @ref="dialogo" OnConfirmado="Eliminar"/>

@if (_errores.Count > 0)
{
    <ul>
        @foreach (var error in _errores)
        {
            <li>@error</li>
        }
    </ul>
}

<table class="table">
  <thead>
    <tr>
      <th>ID</th>
      <th>id de la Persona</th>
      <th>id del Evento Deportivo</th>
      <th>Fecha de Reservacion</th>
      <th>Estado</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var reser in _lista)
    {
    <tr>
      <td>@reser.Id</td>
      <td>@reser.PersonaId</td>
      <td>@reser.EventoDeportivoId</td>
      <td>@reser.FechaAltaReserva</td>
      <td>@reser.Estado</td>
      <td>
        <button class="boton-personalizado-editar" @onclick="()=>ModificarReserva(reser)">
          Editar
        </button>
        <button class="boton-personalizado-eliminar" @onclick="()=>ConfirmarEliminacion(reser)">
          Eliminar
        </button>
      </td>
    </tr>
    }
  </tbody>
</table>

@code {
    List<Reserva> _lista = new List<Reserva>();
    List<string> _errores = new();

    protected override void OnInitialized()
    {
       _lista = ListadoReservaUseCase.Ejecutar();
    }

    DialogoConfirmacion dialogo = null!;
    Reserva? _ReservaParaEliminar = null;

   private void ConfirmarEliminacion(Reserva reser)
   {
      _ReservaParaEliminar = reser;
      dialogo.Mostrar($"¿Desea eliminar la reserva hecha por la persona con Id: {reser.PersonaId}, en la fecha: {reser.FechaAltaReserva}?");
   }

  private void Eliminar()
  {
    _errores.Clear();

    try
    {
        if (_ReservaParaEliminar != null)
        {
            BajaReservaUseCase.Ejecutar(_ReservaParaEliminar.Id, 1);
            _lista = ListadoReservaUseCase.Ejecutar();
        }
    }
    catch (OperacionInvalidaException ex)
    {
        _errores.Add(ex.Message);
    }
    catch (ValidacionException ex)
    {
        _errores = ex.Message
            .Split(new string[] { ". " }, StringSplitOptions.RemoveEmptyEntries)
            .Select(s => s.Trim() + ".")
            .ToList();
    }
  }
  

   void ModificarReserva(Reserva reser)
   {
     Navegador.NavigateTo($"AgregarReserva/{reser.Id}");
   }
}