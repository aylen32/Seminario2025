@using CentroEventos.UI.Components
@page "/ListadoPersonas"
@rendermode InteractiveServer
@inject ListadoPersonasUseCase ListadoPersonasUseCase
@inject BajaPersonaUseCase BajaPersonaUseCase
@inject NavigationManager Navegador

<DialogoConfirmacion @ref="dialogo" OnConfirmado="Eliminar"/>
<table class="table">
  <thead>
    <tr>
      <th>ID</th>
      <th>Nombre</th>
      <th>Apellido</th>
      <th>DNI</th>
      <th>Telefono</th>
      <th>Email</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var per in _lista)
    {
    <tr>
      <td>@per.Id</td>
      <td>@per.Nombre</td>
      <td>@per.Apellido</td>
      <td>@per.DNI</td>
      <td>@per.Telefono</td>
      <td>@per.Mail</td>
      <td>
        <button class="btn btn-primary" @onclick="()=>ModificarPersona(per)">
          Editar
        </button>
        <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(per)">
          Eliminar
        </button>
      </td>
    </tr>
    }
  </tbody>
</table>

@code {
    List<Persona> _lista = new List<Persona>();
    protected override void OnInitialized()
    {
       _lista = ListadoPersonasUseCase.Ejecutar();
    }

    DialogoConfirmacion dialogo = null!;
    Persona? _PersonaParaEliminar = null;

   private void ConfirmarEliminacion(Persona per)
   {
      _PersonaParaEliminar = per;
      dialogo.Mostrar($"¿Desea eliminar a {per.Nombre} {per.Apellido}?");
   }

   private void Eliminar()
   {
     if (_PersonaParaEliminar != null)
     {
       BajaPersonaUseCase.Ejecutar(_PersonaParaEliminar.Id, 1);
      _lista = ListadoPersonasUseCase.Ejecutar(); 
     }
   }

   void ModificarPersona(Persona per)
   {
     Navegador.NavigateTo($"AgregarPersona/{per.Id}");
   }
}