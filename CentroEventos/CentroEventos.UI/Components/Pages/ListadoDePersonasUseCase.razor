@using CentroEventos.UI.Components
@using CentroEventos.Aplicacion.Servicio
@page "/ListadoPersonas"
@inject IServicioSesion Servicio
@rendermode InteractiveServer
@inject ListadoPersonasUseCase ListadoPersonasUseCase
@inject BajaPersonaUseCase BajaPersonaUseCase
@inject NavigationManager Navegador
@if (!accesoPermitido)
{
    <p>Redirigiendo...</p>
}
<DialogoConfirmacion @ref="dialogo" OnConfirmado="Eliminar"/>
<table class="table">
  <thead>
    <tr>
      <th>ID</th>
      <th>Nombre</th>
      <th>Apellido</th>
      <th>DNI</th>
      <th>Telefono</th>
      <th>Email</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var per in _lista)
    {
    <tr>
      <td>@per.Id</td>
      <td>@per.Nombre</td>
      <td>@per.Apellido</td>
      <td>@per.DNI</td>
      <td>@per.Telefono</td>
      <td>@per.Mail</td>
      <td>
        <button class="boton-personalizado-editar" @onclick="()=>ModificarPersona(per)">
          Editar
        </button>
        <button class="boton-personalizado-eliminar" @onclick="()=>ConfirmarEliminacion(per)">
          Eliminar
        </button>
      </td>
    </tr>
    }
  </tbody>
</table>

@code {
    private bool accesoPermitido;
    private bool redirigido = false;

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !Servicio.EstaAutenticado && !redirigido)
        {
            redirigido = true;
            Navegador.NavigateTo("/");
        }
        else if (firstRender)
        {
            accesoPermitido = true;
            StateHasChanged(); // actualiza el render
        }

        return Task.CompletedTask;
    }

    List<Persona> _lista = new List<Persona>();
    protected override void OnInitialized()
    {
       _lista = ListadoPersonasUseCase.Ejecutar();
    }

    DialogoConfirmacion dialogo = null!;
    Persona? _PersonaParaEliminar = null;

   private void ConfirmarEliminacion(Persona per)
   {
      _PersonaParaEliminar = per;
      dialogo.Mostrar($"¿Desea eliminar a {per.Nombre} {per.Apellido}?");
   }

   private void Eliminar()
   {
     if (_PersonaParaEliminar != null)
     {
       BajaPersonaUseCase.Ejecutar(_PersonaParaEliminar.Id, @Servicio.UsuarioActual!.Id);
      _lista = ListadoPersonasUseCase.Ejecutar(); 
     }
   }

   void ModificarPersona(Persona per)
   {
     Navegador.NavigateTo($"AgregarPersona/{per.Id}");
   }
}