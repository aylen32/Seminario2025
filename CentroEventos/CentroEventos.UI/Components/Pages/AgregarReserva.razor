@using CentroEventos.Aplicacion.Excepciones
@using CentroEventos.Aplicacion.Servicio
@page "/AgregarReserva/{Id:int?}"
@rendermode InteractiveServer
@inject NavigationManager Navegador;
@inject IServicioSesion Servicio
@inject ModificarReservaUseCase ModificarReservaUseCase
@inject ObtenerReservaUseCase ObtenerReservaUseCase
@inject AltaReservaUseCase AltaReservaUseCase

@if (_mensajeErrores?.Count > 0)
{
    <ul>
        @foreach (var error in _mensajeErrores)
        {
            <li>@error</li>
        }
    </ul>
}

@if (_esNuevaReserva)
{
  <h3>Agregando una Nueva Reserva</h3>
}
else
{
  <h3>Modificando la Reserva de la fecha: "@_reserva.FechaAltaReserva"</h3>
}

<input placeholder="Id de Persona" @bind="_reserva.PersonaId" class="form-control"readonly="@(!_esNuevaReserva)" />
<input placeholder="Id de Evento Deportivo" @bind="_reserva.EventoDeportivoId" class="form-control"readonly="@(!_esNuevaReserva)" />
<input placeholder="Fecha de la Reserva" @bind="_reserva.FechaAltaReserva" class="form-control"readonly="@(!_esNuevaReserva)" />
<input placeholder="Estado de la Reserva" @bind="_reserva.Estado" class="form-control" />
<button class="btn btn-primary" @onclick="Aceptar">Aceptar</button>

@code {
  Reserva _reserva = Reserva.CrearNueva();
  [Parameter] public int? Id { get; set; }
  bool _esNuevaReserva = true;
  List<string> _mensajeErrores = new();

  protected override void OnParametersSet()
  {
    if (Id != null)
    {
      var reser_hallada = ObtenerReservaUseCase.Ejecutar(Id.Value, @Servicio.UsuarioActual!.Id);
      if (reser_hallada != null)
      {
        _reserva = reser_hallada;
        _esNuevaReserva = false;
      }
    }
  }

  void Aceptar()
  {
      _mensajeErrores.Clear();
      try
      {
        if (_esNuevaReserva)
          AltaReservaUseCase.Ejecutar(_reserva, @Servicio.UsuarioActual!.Id);
        else
          ModificarReservaUseCase.Ejecutar(_reserva, @Servicio.UsuarioActual!.Id);

        _reserva = Reserva.CrearNueva();
        StateHasChanged();
        Navegador.NavigateTo("ListadoReservas");
      }
      catch (ValidacionException ex)
      {
        var msg = ex.Message;
         _mensajeErrores = msg
        .Split(new string[] { ". " }, StringSplitOptions.RemoveEmptyEntries)
        .Select(s => s.Trim() + ".")
        .ToList();
      }
      catch (OperacionInvalidaException ex)
      {
         _mensajeErrores.Add(ex.Message);
      }
  }
}